{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pyright\u00a0Language\u00a0Server\u00a0for\u00a0PyCharm user\u00a0documentation","text":"<p>This site serves as the user documentation for the Pyright Language Server PyCharm plugin.</p> <p>The plugin is dependent on the experimental language server protocol APIs which are only available for PyCharm Professional and other paid IDEs since 2023.2. This means that PyCharm Community users cannot use it.</p> <p>Warning</p> <p>This plugin will be deprecated and merged into its sister in the near future.</p>"},{"location":"#usage","title":"Usage","text":"<p>Go to Settings | Tools | Pyright LS (Global) / Pyright LS (Project) and set the path to your Pyright language server executable.</p> GlobalProject <p></p> <p></p> <p>You might need to reopen your files or restart the IDE for the files to be recognized by the language server. If that doesn't work, refer to Problems and solutions.</p>"},{"location":"#enable-logging","title":"Enable logging","text":"<p>You are strongly encouraged to enable logging. This way, all requests and responses will be recorded in <code>idea.log</code> for further analysis should a problem arises.</p>"},{"location":"configurations/","title":"Configurations","text":""},{"location":"configurations/#executable","title":"Executable","text":"<p>For the plugin to work, at least one executable file needs to be defined using either the Global or Project panel.</p> <p>How do I install the executables?</p> <p>Such a file is typically named <code>pyright-langserver</code>/<code>pyright-python-langserver</code> and can likely be found in:</p> <p>Note</p> <p>The locations mentioned here are for Pip and NPM-like managers. For other tools (e.g. Homebrew), see their documentation to know where they store their executable files.</p> Manager Type OS Directory NPM Global Windows <code>%APPDATA%\\npm</code> NPM Global Linux <code>/usr/local/bin</code> Pip Global Windows <code>%LOCALAPPDATA%\\Programs\\Python\\&lt;version&gt;\\Scripts</code> Pip Global Linux <code>~/.local/bin</code> NPM Local Windows <code>.\\node_modules\\.bin</code> NPM Local Linux <code>./node_modules/.bin</code> Pip Local Windows <code>.\\&lt;your-venv&gt;\\Scripts</code> Pip Local Linux <code>./&lt;your-venv&gt;/bin</code> What's the difference between these files? <p>TLDR: Some may output \"unexpected\" things.</p> <p>Note</p> <p>For this plugin to work with a WSL project, its interpreter and the executable must be located within the same distribution.</p> <p>If the executables can't be found in the aforementioned locations, see the following pages for more information:</p> <ul> <li>Where does npm install packages? - Stack Overflow</li> <li>Where does pip install its packages? - Stack Overflow</li> <li>folders - npm Docs</li> </ul> <p>You can also use a relative path. It would be interpreted as relative to the project directory.</p> <p>The executable is used as-is with no additional checks, so the plugin will still work even if, for example, it's a wrapper script that outputs diagnostics in the expected format.</p> <p>Tip</p> <p>For the best experience, always use or maintain compatibility with the latest version of Pyright.</p>"},{"location":"configurations/#ui-hints","title":"UI hints","text":"<p>As a path field is edited, the small hint under the field will show whether the path is valid or invalid.</p> <p>This is only used to give a general hint; a path can still be saved even if it is marked as invalid.</p>"},{"location":"configurations/#always-use-global","title":"Always use global","text":"<p>Check this option to always use the global executable, even when the project also has an executable specified.</p> <p>Default: <code>false</code></p>"},{"location":"configurations/#auto-suggest-executable","title":"Auto-suggest executable","text":"<p>Check this option to automatically find and suggest an executable for the current project on open. See the corresponding feature for more information.</p> <p>Default: <code>true</code></p>"},{"location":"configurations/#inspection-entry","title":"Inspection entry","text":"<p>This plugin can be disabled by disabling the inspection Pyright language server diagnostics, which can be found under Editor | Inspections. However, this is not recommended for other purposes than debugging.</p> <p>Doing so would cause existing sessions to stop when the restart button is clicked, and new sessions would not be started.</p>"},{"location":"configurations/#highlight-severity-levels","title":"Highlight severity levels","text":"<p>Pyright diagnostics have three possible levels: Error, warning, and information. These can be mapped to different highlight severity levels in the IDE.</p> <p>Note</p> <p>The language server may also output \"hint\" diagnostics that report code as \"unnecessary\" or \"deprecated\". These can be disabled from the global configuration panel.</p> <p>The target levels can be configured via the inspection's corresponding settings pane.</p> <p>Only the levels defined in the dropdowns under the Options pane are honored.</p> <p></p> <p>For each diagnostic level, there are four highlight levels to choose from:</p> Level Default effects Error Red squiggles Warning Yellow squiggles Weak warning Dark yellow squiggles Information No visible effects <p>These levels are semantical, not visual.</p> <p>The Information level is the only one not considered \"problematic\" by the IDE. Annotations of this kind will not be reported as \"problems\" during batch inspections (File, Project Errors and similar tabs in the Problems tool window).</p> <p>Note</p> <p>Despite having no visible effects, Information annotations are still shown on hover.</p> InformationWeak warning <p></p> <p></p>"},{"location":"configurations/#recommended-levels","title":"Recommended levels","text":"Diagnostic For most users (default) For lax users Error Error Warning Warning Warning Weak warning Information Weak warning Weak warning"},{"location":"configurations/#tooltips","title":"Tooltips","text":"<p>These options are not applied retroactively; you need to make an edit to see the effect.</p>"},{"location":"configurations/#use-editor-font","title":"Use editor font","text":"<p>Check this option to display tooltips in the editor font.</p> <p>Default: <code>false</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#add-prefix","title":"Add prefix","text":"<p>Check this option to prefix tooltips with \"Pyright:\".</p> <p>Default: <code>false</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#link-error-codes","title":"Link error codes","text":"<p>Enable this option to display error codes as links.</p> <p>Default: <code>false</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#language-server-settings","title":"Language server settings","text":"<p>These settings are not applied retroactively; the server needs to be restarted for them to have effects.</p>"},{"location":"configurations/#auto-restart-server","title":"Auto-restart server","text":"<p>Check this option to automatically restart the language server on configuration change.</p> <p>Highlight severity level settings will not trigger this behaviour.</p> <p>Default: <code>false</code></p> <p>Note</p> <p>The server might be restarted more than once if both configuration panels are modified.</p>"},{"location":"configurations/#completion-support","title":"Completion support","text":"<p>Check this option to enable completion support.</p> <p>Default: <code>false</code></p> EnabledDisabled <p></p> <p></p> <p>Note</p> <p>The autocompletion result might be modified by the plugin depending on other configurations listed below.</p>"},{"location":"configurations/#auto-import-completions","title":"Auto-import completions","text":"<p>Uncheck this option to prevent the language server from offering completions which, if accepted, will also add a <code>import</code> statement for that newly introduced symbol.</p> <p>This corresponds to the <code>python.analysis.autoImportCompletions</code> setting.</p> <p>Default: <code>true</code></p> Auto-import completions enabledAuto-import completions disabledCompletion support disabled <p></p> <p></p> <p></p>"},{"location":"configurations/#monkeypatch-auto-import-details","title":"Monkeypatch auto-import details","text":"<p>Uncheck this option to prevent the original completion item detail (\"Auto-import\" or a similar localized message) from being overridden by its import source.</p> <p>Default: <code>true</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#autocomplete-parentheses","title":"Autocomplete parentheses","text":"<p>Check this option to also automatically insert parentheses for function, method and constructor completions.</p> <p>Default: <code>false</code></p> BeforeDisabledEnabled <p></p> <p></p> <p></p>"},{"location":"configurations/#monkeypatch-trailing-quote-bug","title":"Monkeypatch trailing quote bug","text":"<p>Uncheck this option to use the IDE's native implementation when applying quoted completions, which may insert extraneous trailing quotes.</p> <p>Upstream issue: IJPL-155741.</p> <p>Default: <code>true</code></p> BeforeEnabledDisabled <p></p> <p></p> <p></p>"},{"location":"configurations/#diagnostics-support","title":"Diagnostics support","text":"<p>Uncheck this option to disable diagnostics support.</p> <p>Default: <code>true</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#tagged-hints","title":"Tagged hints","text":"<p>Uncheck this option to prevent the language server from emitting \"Unnecessary\" and \"Deprecated\" hints, which are visualized in the IDE as faded-out and strikethrough text, correspondingly.</p> <p>This corresponds to the <code>pyright.disableTaggedHints</code> setting.</p> <p>Default: <code>true</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#hover-support","title":"Hover support","text":"<p>Uncheck this option to disable hover support.</p> <p>Default: <code>true</code></p> EnabledDisabled <p></p> <p></p>"},{"location":"configurations/#go-to-definition-support","title":"Go-to-definition support","text":"<p>Check this option to enable go-to-definition support.</p> <p>Default: <code>false</code></p> <p>Note</p> <p>As of yet, PyCharm's native support is prioritized over the language server's.</p> <p>This means Ctrl B (or similar shortcuts) will only trigger PyCharm's support on tokens it can handle (that is, most of them).</p> <p>The difference between the set of all tokens which Pyright support and that of PyCharm is currently unknown.</p> <p>See this issue for more information.</p>"},{"location":"configurations/#log-level","title":"Log level","text":"<p>Note</p> <p>Language server logs are not recorded in <code>idea.log</code> by default. You need to manually enable it.</p> <p>Modify this option to make the language server emit more or less log messages.</p> <p>This corresponds to the <code>python.analysis.logLevel</code> setting.</p> <p>Default: Information</p>"},{"location":"configurations/#add-common-search-paths","title":"Add common search paths","text":"<p>Uncheck this option to tell the language server not to add common search paths like <code>src</code> when there are no execution environments defined in the configuration file.</p> <p>This corresponds to the <code>python.analysis.autoSearchPaths</code> setting.</p> <p>Default: <code>true</code></p>"},{"location":"configurations/#targeted-file-extensions","title":"Targeted file extensions","text":"<p>A file whose extension is included in this list will be recognized as suitable for the language server to run on. This is useful if you use a server whose support range is wider than that of Pyright.</p> <p>Each extension should be written on one line when the editor is expanded. Otherwise, use the pipe character (<code>|</code>) to separate them.</p> <p>Leading and trailing whitespace are stripped away. Blank extensions are thus considered invalid.</p> <p>Default: <code>py</code>, <code>pyi</code></p> <p>Note</p> <p>Presumably, due to a limitation/bug of IntelliJ, characters like \"\ud83d\udd25\" (U+1F525 Fire, the extension for Mojo) cannot be serialized correctly into setting files and therefore will not persist between IDE sessions.</p> <p>Testing shows that this affects characters whose codepoints are greater than U+FFFD.</p>"},{"location":"configurations/#diagnostic-mode","title":"Diagnostic mode","text":"<p>Note</p> <p>This option's usefulness is as of yet unknown.</p> <p>Modify this option to control the number of files for which the language server will analyze and report diagnostics.</p> <p>This corresponds to the <code>python.analysis.diagnosticMode</code> setting.</p> <p>Default: Open files only</p>"},{"location":"configurations/#workspace-folders","title":"Workspace folders","text":"<p>The folders defined by this option will be passed to the language server as \"workspace folders\". Pyright will only recognize <code>pyproject.toml</code>/<code>pyrightconfig.json</code> files which are direct children of these folders.</p> <p>Possible choices:</p> <ul> <li>Project base directories:   Top-level directories which contain files related to the project,   often only one (project root).</li> <li>Source roots:   Directories marked as \"source roots\".</li> </ul> <p>Default: Project base directories</p>"},{"location":"faq/","title":"Frequently asked questions","text":""},{"location":"faq/#what-exactly-is-this-plugin-doing","title":"What exactly is this plugin doing?","text":"<p>Most of the logic is already defined by either the @eclipse-lsp4j/lsp4j library or the experimental language server protocol APIs. This plugin simply glues these and the Pyright language server together.</p> <p>The executable is not checked in any way. You can use your own hand-hacked version if you feel like it.</p>"},{"location":"faq/#why-is-this-page-so-short","title":"Why is this page so short?","text":"<p>See also the sister plugin's FAQ page.</p>"},{"location":"features/","title":"Other features","text":""},{"location":"features/#executable-suggestion","title":"Executable suggestion","text":"<p>When a project is opened, a suggestion to set a file as the executable for that project is shown if:</p> <ul> <li>The interpreter of the project exists and is located inside it.</li> <li>There is a file named <code>pyright-langserver</code>   (with or without extension) among the siblings of the interpreter.</li> <li>The project executable is not yet given.</li> <li>The global executable is not preferred.</li> </ul> <p>Available actions:</p> <ul> <li>Absolute path: Set the absolute path.</li> <li>Relative path: Set the relative path (no leading dot).</li> <li>Do not suggest: Turn off the corresponding option.</li> </ul> <p></p>"},{"location":"features/#suppressing-diagnostics-using-quick-fixes","title":"Suppressing diagnostics using quick fixes","text":"<p>Most diagnostics can be suppressed using their corresponding quick fixes:</p> BeforeAfter <p></p> <p></p> <p>If a comment already presents on that line, the new error code will be appended to the end of the list:</p> BeforeAfter <p></p> <p></p> <p>If the error has no corresponding code, the entire list will be removed:</p> BeforeAfter <p></p> <p></p>"},{"location":"how-to/","title":"How-to guides","text":""},{"location":"how-to/#how-to-install-the-pyright-executables","title":"How to install the Pyright executables","text":"<p>Choose one that works for you:</p> <pre><code>$ pip install pyright\n$ uv pip install pyright\n$ npm install pyright\n$ yarn add pyright\n$ pnpm install pyright\n$ bun install pyright\n$ brew install pyright\n</code></pre> <p>See also Pyright's official installation guide.</p>"},{"location":"how-to/#how-to-restart-the-language-server","title":"How to restart the language server","text":"<p>In the status bar, find the cell that has \"Pyright\" next to a pair of braces. Click it, then click the loop icon.</p> <p></p>"},{"location":"how-to/#how-to-enable-language-server-logging","title":"How to enable language server logging","text":"<p>Add the following line to the Debug Log Settings panel (Help | Diagnostic Tools):</p> <pre><code>#com.intellij.platform.lsp\n</code></pre>"},{"location":"logging/","title":"Logging","text":"<p>For debugging purposes, the plugins may log some informational data. When reporting issues, always include the relevant log entries if applicable.</p>"},{"location":"logging/#where-to-find-the-ide-log-files","title":"Where to find the IDE log files","text":"<p>Open the action panel using Ctrl Shift A or your corresponding shortcut, then choose Show Log in Explorer. On macOS, this action is called Show Log in Finder.</p> <p>This should open a directory containing a file called <code>idea.log</code> and possibly other files that have the <code>idea.&lt;number&gt;.log</code> naming schema. <code>idea.log</code> is the most recent log file; <code>idea.&lt;number&gt;.log</code>s are archived ones.</p> <p>Open <code>idea.log</code> using your favourite text editor/reader. Note that it might be up to 10 MB in size.</p> <p>Alternatively, navigate to the directories documented here.</p>"},{"location":"logging/#log-entries-format","title":"Log entries format","text":"Event Content Keywords to look for Server start Plugin configurations <code>PyrightLSDescriptor - AllConfigurations</code> LSP messages Message content (JSON) <code>Lsp4jServerConnector</code>, <code>PyrightLSDescriptor@</code> <p>If language server logging is enabled, every request and response will also be logged, potentially truncated if it is too long.</p>"},{"location":"problems/","title":"Problems and solutions","text":""},{"location":"problems/#no-annotations","title":"No annotations","text":"<p>Make sure that:</p> <ul> <li>Your project has the correct interpreter set   (Project | Python Interpreter, or a cell in the status bar).</li> <li>The executable is given and is correct.</li> <li>The plugin itself is enabled (Plugins).</li> <li>The corresponding inspection is enabled   (Editor | Inspections \u2192   Pyright language server diagnostics).</li> </ul> <p>Other things to try:</p> <ul> <li>Reinstall the plugin or update to the latest version.</li> <li>Reopen the files, reopen the project or restart the IDE.</li> <li>Restart the language server.</li> <li>Restart your machine.</li> <li>Reinstall/reset the IDE.</li> </ul> <p>If the problem persists, please report it to the issue tracker with relevant log entries.</p>"}]}